version: '3'

volumes:
  build:

services:
  redis:
    image: redis:4.0.2
    volumes:
      - ${STORAGE}/redis:/data

  mongodb:
    image: mongo:3
    volumes:
      - ${STORAGE}/mongodb:/data/db

  scrapper:
    restart: always
    image: deuxmax/concerto-scrapper:latest
    environment:
      REDIS_PORT: 6379
      REDIS_HOST: redis
      QUEUE_HOST_ID: Scrapper
      QUEUE_NAME: global
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
    links:
      - redis
      - mongodb
      - bd

  bd:
    image: mariadb:10.3
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${STORAGE}/mariadb:/var/lib/mysql

  app:
    build:
      context: .
      args:
        API_URL: /api
        API_PORT: 8090
    environment:
      CORS_DOMAIN: http://concerto.deuxmax.fr
      MYSQL_DATABASE: concerto
      MYSQL_PORT: 3306
      MYSQL_CONNECTION_STRING: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@bd/${MYSQL_DATABASE}
      SCRAPPER_PORT: 8080
      SCRAPPER_HOST: scrapper
      ELASTIC_HOST: es
      ELASTIC_PORT: 9200
    volumes:
      - ./sessions:/var/app/sessions
      - build:/var/app/build
    links:
      - bd
      - scrapper
      - es

  nginx:
    image: nginx:1.13
    ports:
      - 8888:80
    command: 'nginx -g "daemon off;"'
    volumes:
      - ./Docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./Docker/nginx/conf.d/${ENVIRONMENT}.conf:/etc/nginx/sites-enabled/default.conf:ro
      - ./Docker/nginx/conf.d/arena.${ENVIRONMENT}.conf:/etc/nginx/sites-enabled/arena.conf:ro
      - build:/var/app/build
      - .data/logs/nginx:/var/log/nginx
    links:
      - app
      - scrapper

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.3
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1